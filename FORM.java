/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javafinalproject;

import com.mysql.cj.xdevapi.Statement;
import java.awt.print.PrinterException;
import static java.lang.Double.parseDouble;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import static java.time.zone.ZoneRulesProvider.refresh;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wege
 */
public class FORM extends javax.swing.JFrame {
 static Connection conn;
    static PreparedStatement stat;
    static ResultSet result;
        static Statement s;

    /**
     * Creates new form FORM
     */
    public FORM() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
     String cid;
    double charge,TOTALCOST;
     int count;
          public void print()
     {
       cid=txtid.getText();
         String cname=txtname.getText();
         String unit =txtunit.getText();
        
         txtprint.setText(txtprint.getText() +"Electric Billing System " +"\n" );
         txtprint.setText(comboitem.getSelectedItem() +"\n" + "STATUS: " +(statuss.getSelectedItem()+  "\n" ));
         txtprint.setText(txtprint.getText() + "Custumer-ID: "  + cid + "\n" );
         txtprint.setText(txtprint.getText() + "Customer-Name : " + cname + "\n" );
         txtprint.setText(txtprint.getText() + "Unit : " + unit + "\n" );
         txtprint.setText(txtprint.getText() + "Amount: " + TOTALCOST + "\n" );
         txtprint.setText(txtprint.getText() + "Thank you for using our service " + "\n" );

         
         

     }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtcalc = new javax.swing.JButton();
        printbtn = new javax.swing.JButton();
        save = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        txtid = new javax.swing.JTextField();
        statuss = new javax.swing.JComboBox<>();
        txtname = new javax.swing.JTextField();
        txtunit = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtprint = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        comboitem = new javax.swing.JComboBox<>();
        find = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        cost = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(51, 255, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("ELELECTRIC AND WATER BILLING SYSTEM");

        jLabel8.setText("USER_ID");

        jLabel9.setText("TYPE");

        jLabel10.setText("STATUS");

        jLabel11.setText("USER_NAME");

        jLabel12.setText("UNIT");

        txtcalc.setText("CALCULATE");
        txtcalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcalcActionPerformed(evt);
            }
        });

        printbtn.setText("PRINT");
        printbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtnActionPerformed(evt);
            }
        });

        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });

        statuss.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Householder", "Business" }));
        statuss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statussActionPerformed(evt);
            }
        });

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        txtunit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtunitActionPerformed(evt);
            }
        });

        jLabel13.setText("COST");

        txtprint.setColumns(20);
        txtprint.setRows(5);
        jScrollPane5.setViewportView(txtprint);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(table);

        comboitem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "water_bill", "electric_bill" }));
        comboitem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboitemActionPerformed(evt);
            }
        });

        find.setText("FIND");
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });

        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        cost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(24, 335, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(jLabel10)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel13))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtunit)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtname)
                                    .addComponent(statuss, 0, 282, Short.MAX_VALUE)
                                    .addComponent(txtid)
                                    .addComponent(comboitem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(find)
                        .addGap(18, 18, 18)
                        .addComponent(update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(267, 267, 267))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(310, 310, 310)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(txtcalc)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(clear)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(printbtn)
                                .addGap(33, 33, 33)
                                .addComponent(save)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(comboitem, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statuss, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtunit, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtcalc)
                            .addComponent(printbtn)
                            .addComponent(save)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(find)
                            .addComponent(update)
                            .addComponent(delete))
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(clear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcalcActionPerformed
        // TODO add your handling code here:
      
        count=Integer.parseInt(txtunit.getText());
        if(count > 20 && comboitem.getSelectedItem().equals("water_bill") ){
            charge = 26;
                    TOTALCOST = charge * count;
        }
        
        else if(count <21 && count > 10 && comboitem.getSelectedItem().equals("water_bill")){
            charge = 13;
                    TOTALCOST = charge * count;
        }
        else if(count <11 && count >6 && comboitem.getSelectedItem().equals("water_bill") ){
            charge = 9;
                    TOTALCOST = charge * count;
        }
         else if (statuss.getSelectedItem().equals("Business") && comboitem.getSelectedItem().equals("electric_bill")&& count > 0){
              charge = 1.38;
                    TOTALCOST = charge * count;
           
        }
         else if (statuss.getSelectedItem().equals("Householder") && comboitem.getSelectedItem().equals("electric_bill") && count >0){
               charge = 0.42;
                    TOTALCOST = charge * count;
            
        }
          else if (statuss.getSelectedItem().equals("Householder") && comboitem.getSelectedItem().equals("electric_bill") && count >-1 && count <1){
            charge = 5;
                    TOTALCOST = charge * count +  5;
        }
             else if ( statuss.getSelectedItem().equals("Business") && comboitem.getSelectedItem().equals("electric_bill") && count >-1 && count <1){
            charge = 5;
                    TOTALCOST = charge * count +  5;
        }
        else if(count <7 && count >0 && comboitem.getSelectedItem().equals("water_bill"))  
                {
            charge = 5;
                  
                     TOTALCOST = charge * count;
        }
        else if(count <1 && count >-1 && comboitem.getSelectedItem().equals("water_bill"))  
                {
            charge = 5;
                  
                     TOTALCOST = charge * count;
        }
        else{
             JOptionPane.showMessageDialog(this, "please select your proper STATUS and TYPE  option","WARNING ", JOptionPane.WARNING_MESSAGE);
            refresh(); 
        }
        
        cost.setText(cost.getText() + TOTALCOST + "\n" );
        print();
    }//GEN-LAST:event_txtcalcActionPerformed

    private void printbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtnActionPerformed
        // TODO add your handling code here:
         try {
            txtprint.print();

            // TODO add your handling code here:
        } catch (PrinterException ex) {
            Logger.getLogger(FORM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printbtnActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
   txtid.setText("");
txtprint.setText("");
txtname.setText("");
txtunit.setText("");
cost.setText("");
comboitem.getSelectedItem().equals("select type");
statuss.getSelectedItem().equals("your status");
    }//GEN-LAST:event_clearActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        
try {
     cid =txtid.getText();
    String query = "INSERT INTO info(id,type ,status,name, unit,cost) VALUES(?,?,?,?,?,?)";
  // Prepare the SQL statement
  stat = conn.prepareStatement(query);

  // Set the values for each placeholder
   

  stat.setString(1,txtid.getText());
  stat.setString(2, (String)comboitem.getSelectedItem());
  stat.setString(3, (String)statuss.getSelectedItem());
  stat.setString(4, txtname.getText());
  stat.setDouble(5,parseDouble(txtunit.getText())); 
  stat.setDouble(6, parseDouble(cost.getText()));
 
            stat.executeUpdate();
            JOptionPane.showMessageDialog(this, "Successfully Saved","Success", JOptionPane.INFORMATION_MESSAGE);
  // Execute the update
 int rowsAffected = stat.executeUpdate();
  // Print a success message
refresh();
} 
catch (Exception ex) {
  // Print an error message
    JOptionPane.showMessageDialog(this, " PLEASE FILL ALL INFORMATION","ERROR", JOptionPane.ERROR_MESSAGE);
    
  System.out.println("Error inserting data into the info table: " + ex.getMessage());
}
    }//GEN-LAST:event_saveActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
        // TODO add your handling code here:
          try {
            
              String query = "Select * from info WHERE id=?";
             stat = conn.prepareStatement(query);
             stat.setString(1, txtid.getText());
             result=stat.executeQuery();
              if(result.next()==true)
              
              {   comboitem.setSelectedItem(result.getString(2));
              statuss.setSelectedItem(result.getString(3));
              txtname.setText(result.getString(4));
                  txtunit.setText(result.getString(5));
                  cost.setText(result.getString(6));
              }
             else{
              
                JOptionPane.showMessageDialog(this, "no record found !!!");
             }
             refresh();
        } 
        catch (Exception e) {
        }
    }//GEN-LAST:event_findActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed

//////////////////////
try (PreparedStatement stmt = conn.prepareStatement("UPDATE table_name SET type = ?, name = ?, unit = ?, cost = ?, status = ? WHERE id = ?")) {
   
  stat.setString(1, (String) comboitem.getSelectedItem());
    stat.setString(2, txtname.getText());
       stat.setDouble(3,parseDouble(txtunit.getText())); 
 stat.setDouble(4, parseDouble(cost.getText()));
   stat.setString(5, (String) statuss.getSelectedItem());
// stat.setString(6, txtid.getText());

  
  
  int rowAffected = stmt.executeUpdate();
  if (rowAffected == 0) {
    JOptionPane.showMessageDialog(null, "No records found for the given id.", "Error", JOptionPane.ERROR_MESSAGE);
  } else {
    JOptionPane.showMessageDialog(null, "Record updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
  }
} catch (SQLException ex) {
  //JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
 // ex.printStackTrace();
 System.out.print(ex);
}

/////////////////////////

    }//GEN-LAST:event_updateActionPerformed

    
    
    
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
if (txtid.getText().trim().length() == 0) {
   JOptionPane.showMessageDialog(this, "Please select an ID first", "Warning", JOptionPane.WARNING_MESSAGE);
} else {
   int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the selected ID?", "Confirm", JOptionPane.YES_NO_OPTION);
   if (confirm == JOptionPane.YES_OPTION) {
      try {
         String query = "DELETE FROM info WHERE id = ?";
         PreparedStatement stat = conn.prepareStatement(query);
         stat.setString(1, txtid.getText());
         stat.executeUpdate();
         JOptionPane.showMessageDialog(this, "Data deleted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);
         refresh();
      } catch (Exception ex) {
         JOptionPane.showMessageDialog(this, "Error deleting data", "Error", JOptionPane.ERROR_MESSAGE);
      }
   }
}


    }//GEN-LAST:event_deleteActionPerformed

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtidActionPerformed

    private void comboitemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboitemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboitemActionPerformed

    private void statussActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statussActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statussActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void txtunitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtunitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtunitActionPerformed

    private void costActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FORM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FORM().setVisible(true);
            }
        });
         try {
           Class.forName("com.mysql.jdbc.Driver");
           //Connection string
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/jproject", "root","");
           System.out.println("Databse connected successfully");
           
           
           refresh();
        }
        catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        
    }
         public static void refresh(){
             
      try {
            //Fetching and Displaying data to the table
           String query = "Select * from info";
           stat = conn.prepareStatement(query);
           result = stat.executeQuery();
           //Table Model
           DefaultTableModel model = new DefaultTableModel();
           String[] column = {"ID","TYPE","STATUS", "NAME", "UNIT", "COST" ,"DATE"};                                                                                                 
           model.setColumnIdentifiers(column);
           while(result.next()){
               Object[] row = new Object[] {result.getInt("id"),result.getString("type"),result.getString("status"), result.getString("name"), result.getDouble("unit"), result.getDouble("cost"),result.getDate("date")};  
               model.addRow(row);              
           } 
           table.setModel(model);
           //End
        }
        catch(Exception ex){
            System.out.println(ex.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton clear;
    private static javax.swing.JComboBox<String> comboitem;
    private javax.swing.JTextField cost;
    private javax.swing.JButton delete;
    private javax.swing.JButton find;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private static javax.swing.JButton printbtn;
    private static javax.swing.JButton save;
    private static javax.swing.JComboBox<String> statuss;
    private static javax.swing.JTable table;
    private static javax.swing.JButton txtcalc;
    private static javax.swing.JTextField txtid;
    private static javax.swing.JTextField txtname;
    private static javax.swing.JTextArea txtprint;
    private static javax.swing.JTextField txtunit;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

   
}
